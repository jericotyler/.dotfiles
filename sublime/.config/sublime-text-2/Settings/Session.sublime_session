{
	"folder_history":
	[
	],
	"last_window_id": 1,
	"settings":
	{
	},
	"windows":
	[
		{
			"auto_complete":
			{
				"selected_items":
				[
					[
						"pkgs_",
						"pkgs_tricky"
					]
				]
			},
			"buffers":
			[
				{
					"file": "/home/jericotyler/.dotfiles/arch-install.sh",
					"settings":
					{
						"buffer_size": 1950,
						"line_ending": "Unix"
					}
				},
				{
					"file": "/home/jericotyler/.dotfiles/arch-install-chroot.sh",
					"settings":
					{
						"buffer_size": 1002,
						"line_ending": "Unix"
					}
				},
				{
					"contents": "#!/bin/bash\n# Methods and the like\nlog() {\n    echo -e \"[*] $1\" >&2\n}\n\nprompt() {\n    read -p \"[*] $1 [y/N] \" -n 1 -r\n    if [[ ! $REPLY =~ ^[Yy]$ ]]; then\n        return 1\n    else\n        return 0\n    fi\n}\n\npkgs_tricky=(\n	\"termite\"\n    \"scrot\"\n    \"rofi\"\n    \"powerline\"\n    \"powerline-fonts\"\n    )\n\n# Core packages Super dirty\npkgs=(\n    #Core\n    \"bash-completion\"\n    \"xorg-server\"\n    \"xorg-apps\"\n    \"xorg-xinit\"\n    \"xorg-xbacklight\"\n    \"nvidia\"\n    \"xf86-video-intel\"\n    \"xf86-video-vesa\"\n    \"alsa-utils\"\n    \"pulseaudio-alsa\"\n    \"compton\"\n    \"i3-gaps\"\n    \"i3blocks-gaps\"\n    \"i3lock-color-git\"\n    \"i3status\"\n    \"acpi_call\"\n    \"network-manager-applet\"\n    \"networkmanager-dispatcher-ntpd\"\n    \"xfsudo\"\n    \"arandr\"\n    \"lxappearance-gtk3\"\n    \"arc-gtk-theme\"\n    \"gtk-theme-arc-grey-git\"\n    \"numix-circle-icon-theme-git\"\n    \"feh\"\n    \"dmenu\"\n    \"fish\"\n    \"terminus-font\"\n    \"imagemagick\"\n    \"nemo\"\n    \"nemo-preview\"\n    \"neofetch\"\n    \"sublime-text\"\n    \"peazip-gtk2\"\n    \"vivaldi\"\n    \"yaourt\"\n)\n\npkgs_fonts=(\n    \"ttf-humor-sans\"\n    \"ttf-liberation\"\n    \"ttf-ms-fonts\"\n    \"adobe-source-code-pro-fonts\"\n    \"adobe-source-serif-pro-fonts\"\n    \"adobe-source-sans-pro-fonts\"\n    \"inconsolata-psf-git\"\n    #\"awesome-terminal-fonts\"\n    \"ttf-font-icons\"\n    \"ttf-font-awesome\"\n    \"adobe-source-han-sans-cn-fonts\"\n    \"adobe-source-han-sans-kr-fonts\"\n    \"adobe-source-han-sans-otc-fonts\"\n    \"adobe-source-han-sans-tw-fonts\"\n    \"adobe-source-han-serif-cn-fonts\"\n    \"adobe-source-han-sans-jp-fonts\"\n    \"adobe-source-han-serif-jp-fonts\"\n    \"adobe-source-han-serif-kr-fonts\"\n    \"adobe-source-han-serif-otc-fonts\"\n    \"adobe-source-han-serif-tw-fonts\"\n    )\n\npkgs_secondary=(\n    #others\n    \"catimg\"\n    \"escrotum-git\"\n    \"gparted\"\n    \"gptfdisk\"\n    \"lib32-gtk2\"\n    \"lib32-libpulse\"\n    \"lib32-libxrandr\"\n    \"lib32-openal\"\n    \"ntfs-3g\"\n    \"mesa-demos\"\n    \"pavucontrol\"\n    \"perl\"\n    \"procps-ng\"\n    \"psmisc\"\n    \"python-pip\"\n    \"sl\"\n    \"systemd-sysvcompat\"\n    \"tmux\"\n    \"unrar\"\n    \"viewnior\"\n    \"vim\"\n    \"xfsprogs\"\n    \"yacpi\"\n    \"zip\"\n)\n\n# Optional extra packages that I enjoy having\npkgs_extra=(\n\n    \"baka-mplayer\"\n    \"calibre\"\n    \"cava\"\n    \"cli-visualizer\"\n    \"deluge\"\n    \"filelight\"\n    \"flashplayer-standalone\"\n    \"kcc\"\n    \"mplayer\"\n    \"youtube-dl\"\n    \"vivaldi-widevine\"\n    \"tor-browser\"\n    \"steam-native-runtime\"\n    \"love\"\n    \"skypeforlinux-bin\"\n    \"nyancat\"\n    \"pepper-flash\"\n    \"multimc5\"\n)\n\n#utils I sometimes need\npkgs_utils=(\n    \"tumbld-git\"\n    \"ufraw-thumbnailer\"\n    \"arch-install-scripts\"\n    \"darktable-git\"\n    \"freecad\"\n    \"gqrx\"\n    \"inkscape\"\n    \"lolcat\"\n    \"mangle-git\"\n    \"unigine-valley\"\n    \"scribus\"\n    \"rainbow\"\n    \"qemu\"\n    \"ranger\"\n    \"freerdp\"\n    \"remmina\"\n    \"hexchat\"\n    \"remmina-plugin-rdesktop\"\n    )\n\n# Where ma' dotfiles at, yo?\nstows=(\n    \"fish\"\n    \"git\"\n    \"termite\"\n    \"mpv\"\n    \"misc\"\n    \"sublime\"\n    \"wm\"\n    \"xorg\"\n)\n\n# Now we install things\n# Sudo all day every day\nlog \"Gonna need that password yo\"\nsudo -v\n\nlog \"Checking to see if needed things are installed...\"\nsudo pacman -S  --ignore=gcc --needed --noconfirm base-devel expac yajl git stow\n\n# Remove stows\nlog \"Cleaning up existing shmuts...\"\nrm -rf ~/.config/fish\nrm -rf ~/.config/git\nrm -rf ~/.config/i3\nrm -rf ~/.config/i3status\nrm -rf ~/.config/mpv\nrm -rf ~/.config/sublime-text-2\nrm -rf ~/.tmux.conf\nrm -rf ~/.xinitrc\n\n# Install the damn dotfiles\nlog \"Installing dotfiles...\"\nfor ((i=0; i<=$((${#stows[@]} - 1)); i++)); do\n    stow -d ~/.dotfiles -t ~ ${stows[i]}\n    log \"\\t${stows[i]} dotfiles installed!\"\ndone\n\n# Install the prerequisites\nlog \"Installing prerequisites...\"\n\nsudo rm -rf /etc/pacman.conf\nsudo stow -d ~/.dotfiles -t / pacman-root\nlog \"Pacman config installed!\"\n\nlog \"Resizing /tmp\"\nsudo mount -o remount,size=4G,noatime /tmp\n\nlog \"Synchronizing repositories...\"\nsudo pacman -Syy\n\nlog \"Checking for pacaur\"\nif [[ $(pacman -Qs pacaur) == \"\" ]]; then\n    log \"Fetching keys for packages...\"\n    gpg --recv-keys --keyserver hkp://pgp.mit.edu 1EB2638FF56C0C53\n    sudo pacman-key --refresh-keys\n\n    log \"Building pacaur...\"\n    broot=$(mktemp -d)\n\n    mkdir -p \"$broot\"\n    cd \"$broot\" || exit 1\n\n    git clone \"https://aur.archlinux.org/cower.git\"\n    git clone \"https://aur.archlinux.org/pacaur.git\"\n\n    cd \"${broot}/cower\" || exit 1\n    makepkg -s -i --noconfirm\n\n    cd \"${broot}/pacaur\" || exit 1\n    makepkg -s -i --noconfirm\n\n    log \"Cleaning up...\"\n    cd \"$HOME\" || exit 1\n    rm -rf \"$broot\"\nelse\n    log \"Looks like pacaur is already installed\"\nfi\n\n# Install the main packages\nlog \"Installing core packages...\"\nfor ((i=0; i<=$((${#pkgs[@]} - 1)); i++)); do\n    if [[ $(pacaur -Qs ${pkgs[i]}) == \"\" ]]; then\n        pacaur --noconfirm --noedit -S ${pkgs[i]}\n    fi\ndone\nlog \"Done installing core packages\"\n\nlog \"Installing Fonts...\"\nfor ((i=0; i<=$((${#pkgs_fonts[@]} - 1)); i++)); do\n    if [[ $(pacaur -Qs ${pkgs_fonts[i]}) == \"\" ]]; then\n        pacaur --noedit -S ${pkgs_fonts[i]}\n    fi\ndone\n\nlog \"Installing Secondary...\"\nfor ((i=0; i<=$((${#pkgs_secondary[@]} - 1)); i++)); do\n    if [[ $(pacaur -Qs ${pkgs_secondary[i]}) == \"\" ]]; then\n        pacaur --noedit -S ${pkgs_secondary[i]}\n    fi\ndone\n\nlog \"Installing tricky packages...\"\nfor ((i=0; i<=$((${#pkgs_tricky[@]} - 1)); i++)); do\n    if [[ $(pacaur -Qs ${pkgs_tricky[i]}) == \"\" ]]; then\n        pacaur --noedit -S ${pkgs_tricky[i]}\n    fi\ndone\nlog \"Done installing tricky packages\"\n\n# Install Fun?\nif $(prompt \"Install Funtime packages?\"); then\n    echo \"\"\n    log \"Installing extra packages...\"\n    for ((i=0; i<=$((${#pkgs_extra[@]} - 1)); i++)); do\n        if [[ $(pacaur -Qs ${pkgs_extra[i]}) == \"\" ]]; then\n            pacaur --noconfirm --noedit -S ${pkgs_extra[i]}\n        fi\n    done\n    pacaur -S termite\n    log \"Done installing Funtime packages\"\nelse\n    echo\n    log \"If you say so\"\nfi\n\n# Install Utils?\nif $(prompt \"Install extra packages?\"); then\n    echo \"\"\n    log \"Installing extra packages...\"\n    for ((i=0; i<=$((${#pkgs_utils[@]} - 1)); i++)); do\n        if [[ $(pacaur -Qs ${pkgs_utils[i]}) == \"\" ]]; then\n            pacaur --noconfirm --noedit -S ${pkgs_utils[i]}\n        fi\n    done\n    log \"Done installing extra packages\"\nelse\n    echo\n    log \"If you say so\"\nfi\n\n# Remove orphans\nif [[ ! $(pacman -Qtdq) == \"\" ]]; then\n    log \"Removing orphans...\"\n    sudo pacman -Rsn --noconfirm $(pacman -Qtdq)\nelse\n    log \"No orphans, huzza!\"\nfi\n\n# Fix temp\nlog \"Fixing /tmp size\"\nsudo mount -o remount,size=1G,noatime /tmp\n\n\n# And done~\nlog \"All done, have a good one\"\nexit 0\n",
					"file": "/home/jericotyler/.dotfiles/install",
					"file_size": 6559,
					"file_write_time": 1503547823000000,
					"settings":
					{
						"buffer_size": 6564,
						"line_ending": "Unix"
					}
				},
				{
					"file": "/etc/fstab",
					"settings":
					{
						"buffer_size": 923,
						"line_ending": "Unix"
					}
				},
				{
					"file": "/boot/refind_linux.conf",
					"settings":
					{
						"buffer_size": 281,
						"line_ending": "Unix"
					}
				},
				{
					"file": "/home/jericotyler/.dotfiles/nvidiasetup.sh",
					"settings":
					{
						"buffer_size": 116,
						"line_ending": "Unix"
					}
				},
				{
					"file": "/home/jericotyler/.dotfiles/user-install.sh",
					"settings":
					{
						"buffer_size": 409,
						"line_ending": "Unix"
					}
				}
			],
			"build_system": "",
			"command_palette":
			{
				"height": 0.0,
				"selected_items":
				[
				],
				"width": 0.0
			},
			"console":
			{
				"height": 0.0
			},
			"distraction_free":
			{
				"menu_visible": true,
				"show_minimap": false,
				"show_open_files": false,
				"show_tabs": false,
				"side_bar_visible": false,
				"status_bar_visible": false
			},
			"file_history":
			[
				"/home/jericotyler/.steam/steam/steamapps/common/Stardew Valley/Mods/TractorMod/config.json",
				"/home/jericotyler/.steam/steam/steamapps/common/Stardew Valley/Mods/Replanter/assets\\dialog.xnb",
				"/home/jericotyler/.steam/steam/steamapps/common/Stardew Valley/Mods/Replanter/assets\\dialog.yaml",
				"/home/jericotyler/.steam/steam/steamapps/common/Stardew Valley/Mods/UI Info Suite/config.json",
				"/home/jericotyler/.xinitrc",
				"/home/jericotyler/.steam/steam/steamapps/common/Stardew Valley/Mods/Replanter/config.json",
				"/home/jericotyler/.steam/steam/steamapps/common/Stardew Valley/Mods/Longevity/config.json",
				"/home/jericotyler/.config/i3/i3blocks.conf",
				"/home/jericotyler/.config/i3/spotify.py",
				"/home/jericotyler/.config/i3/gamepad",
				"/home/jericotyler/Downloads/cipher.txt",
				"/home/jericotyler/Desktop/2113665_Kittery_paraphore099.swf",
				"/etc/X11/xorg.conf.d/20-intel.conf",
				"/etc/X11/xorg.conf.d/10-monitor.conf",
				"/etc/X11/xorg.conf.d/20-nvidia.conf",
				"/etc/X11/xorg.conf",
				"/home/jericotyler/Downloads/IPostage.csv",
				"/run/media/jericotyler/BACKUP/Cut time 9-15.txt",
				"/home/jericotyler/PA/run.sh",
				"/home/jericotyler/multiscreen_enable.sh",
				"/home/jericotyler/multiscreen_term.sh",
				"/home/jericotyler/.screenlayout/frontdeskoct.sh",
				"/home/jericotyler/Poke Abby (Linux)/run.sh",
				"/etc/X11/xorg.conf.d/10-gpu.conf",
				"/storage/Prawns/config.ini",
				"/home/jericotyler/.dotfiles/xorg/.xinitrc",
				"/storage/e621dl/README.md",
				"/storage/e621dl/config.ini",
				"/storage/e621dl/lib/local.py",
				"/home/jericotyler/.dotfiles/nvidiasetup.sh",
				"/home/jericotyler/fstab",
				"/etc/fstab",
				"/home/jericotyler/jiraclient-3_8_4/bin/jiraclient.sh",
				"/etc/lightdm/lightdm.conf",
				"/etc/udev/rules.d/70-u2f.rules",
				"/home/jericotyler/.dotfiles/wm/.config/i3/config",
				"/home/jericotyler/.config/hexchat/servlist.conf",
				"/etc/X11/xorg.conf.d/10-gpu.conf.nouveau",
				"/var/lib/logmein-hamachi/h2-engine-override.cfg",
				"/var/lib/logmein-hamachi/h2-engine.cfg",
				"/boot/refind_linux.conf",
				"/home/jericotyler/output.file",
				"/usr/share/lightdm-webkit/themes/antergos/README.md",
				"/etc/lightdm/lightdm-webkit2-greeter.conf",
				"/usr/share/lightdm-webkit/themes/customjeri/index.html",
				"/usr/share/lightdm-webkit/themes/antergos/index.theme",
				"/etc/slim.conf",
				"/usr/share/slim/themes/arch-jeri/slim.theme",
				"/home/jericotyler/.dotfiles/arch-install.sh",
				"/home/jericotyler/.dotfiles/misc/.Xresources",
				"/boot/efi/EFI/refind/refind.conf",
				"/home/jericotyler/.dotfiles/termite/.config/termite/config",
				"/home/jericotyler/.dotfiles/arch-install-chroot.sh",
				"/home/jericotyler/.dotfiles/user-install.sh",
				"/home/jericotyler/.dotfiles/install",
				"/home/jericotyler/Downloads/LineItems-20170826_1214_EDT.csv",
				"/home/jericotyler/20-intel.conf",
				"/home/jericotyler/.dotfiles/.Xresources",
				"/home/jericotyler/.dotfiles/wm/.config/i3/i3blocks.conf",
				"/home/jericotyler/.Xresources2",
				"/home/jericotyler/.config/i3/lockthisshit.sh",
				"/home/jericotyler/Downloads/README",
				"/home/jericotyler/.config/i3/config",
				"/home/jericotyler/.config/termite/config",
				"/home/jericotyler/.Xresources",
				"/home/jericotyler/.config/sublime-text-2/Packages/Color Scheme - Default/Isotope Dark.tmTheme",
				"/home/jericotyler/.config/sublime-text-2/Packages/User/Preferences.sublime-settings"
			],
			"find":
			{
				"height": 36.0
			},
			"find_in_files":
			{
				"height": 0.0,
				"where_history":
				[
				]
			},
			"find_state":
			{
				"case_sensitive": false,
				"find_history":
				[
					"657a 6a77 2c20 6a73 6d76 7877 6b2c 206a 6c20 7679",
					"0"
				],
				"highlight": true,
				"in_selection": false,
				"preserve_case": false,
				"regex": false,
				"replace_history":
				[
				],
				"reverse": false,
				"show_context": true,
				"use_buffer2": true,
				"whole_word": false,
				"wrap": true
			},
			"groups":
			[
				{
					"selected": 4,
					"sheets":
					[
						{
							"buffer": 0,
							"file": "/home/jericotyler/.dotfiles/arch-install.sh",
							"settings":
							{
								"buffer_size": 1950,
								"regions":
								{
								},
								"selection":
								[
									[
										0,
										0
									]
								],
								"settings":
								{
									"syntax": "Packages/ShellScript/Shell-Unix-Generic.tmLanguage",
									"tab_size": 4,
									"translate_tabs_to_spaces": true
								},
								"translation.x": 0.0,
								"translation.y": 216.0,
								"zoom_level": 1.0
							},
							"type": "text"
						},
						{
							"buffer": 1,
							"file": "/home/jericotyler/.dotfiles/arch-install-chroot.sh",
							"settings":
							{
								"buffer_size": 1002,
								"regions":
								{
								},
								"selection":
								[
									[
										0,
										0
									]
								],
								"settings":
								{
									"syntax": "Packages/ShellScript/Shell-Unix-Generic.tmLanguage",
									"tab_size": 4,
									"translate_tabs_to_spaces": true
								},
								"translation.x": 0.0,
								"translation.y": 54.0,
								"zoom_level": 1.0
							},
							"type": "text"
						},
						{
							"buffer": 2,
							"file": "/home/jericotyler/.dotfiles/install",
							"settings":
							{
								"buffer_size": 6564,
								"regions":
								{
								},
								"selection":
								[
									[
										585,
										585
									]
								],
								"settings":
								{
									"syntax": "Packages/ShellScript/Shell-Unix-Generic.tmLanguage",
									"tab_size": 4,
									"translate_tabs_to_spaces": true
								},
								"translation.x": 0.0,
								"translation.y": 972.0,
								"zoom_level": 1.0
							},
							"type": "text"
						},
						{
							"buffer": 3,
							"file": "/etc/fstab",
							"settings":
							{
								"buffer_size": 923,
								"regions":
								{
								},
								"selection":
								[
									[
										280,
										280
									]
								],
								"settings":
								{
									"syntax": "Packages/Text/Plain text.tmLanguage"
								},
								"translation.x": 0.0,
								"translation.y": 0.0,
								"zoom_level": 1.0
							},
							"type": "text"
						},
						{
							"buffer": 4,
							"file": "/boot/refind_linux.conf",
							"settings":
							{
								"buffer_size": 281,
								"regions":
								{
								},
								"selection":
								[
									[
										0,
										0
									]
								],
								"settings":
								{
									"syntax": "Packages/Text/Plain text.tmLanguage"
								},
								"translation.x": 0.0,
								"translation.y": 0.0,
								"zoom_level": 1.0
							},
							"type": "text"
						},
						{
							"buffer": 5,
							"file": "/home/jericotyler/.dotfiles/nvidiasetup.sh",
							"settings":
							{
								"buffer_size": 116,
								"regions":
								{
								},
								"selection":
								[
									[
										0,
										0
									]
								],
								"settings":
								{
									"syntax": "Packages/ShellScript/Shell-Unix-Generic.tmLanguage"
								},
								"translation.x": 0.0,
								"translation.y": 0.0,
								"zoom_level": 1.0
							},
							"type": "text"
						},
						{
							"buffer": 6,
							"file": "/home/jericotyler/.dotfiles/user-install.sh",
							"settings":
							{
								"buffer_size": 409,
								"regions":
								{
								},
								"selection":
								[
									[
										0,
										0
									]
								],
								"settings":
								{
									"syntax": "Packages/ShellScript/Shell-Unix-Generic.tmLanguage"
								},
								"translation.x": 0.0,
								"translation.y": 0.0,
								"zoom_level": 1.0
							},
							"type": "text"
						}
					]
				}
			],
			"incremental_find":
			{
				"height": 0.0
			},
			"input":
			{
				"height": 0.0
			},
			"layout":
			{
				"cells":
				[
					[
						0,
						0,
						1,
						1
					]
				],
				"cols":
				[
					0.0,
					1.0
				],
				"rows":
				[
					0.0,
					1.0
				]
			},
			"menu_visible": true,
			"position": "0,0,0,0,0,962,11,1905,1045,1920,1080",
			"replace":
			{
				"height": 0.0
			},
			"save_all_on_build": true,
			"select_file":
			{
				"height": 0.0,
				"selected_items":
				[
				],
				"width": 0.0
			},
			"select_project":
			{
				"height": 0.0,
				"selected_items":
				[
				],
				"width": 0.0
			},
			"show_minimap": true,
			"show_open_files": false,
			"show_tabs": true,
			"side_bar_visible": true,
			"side_bar_width": 150.0,
			"status_bar_visible": true,
			"window_id": 1,
			"workspace_name": ""
		}
	],
	"workspaces":
	{
		"recent_workspaces":
		[
		]
	}
}
